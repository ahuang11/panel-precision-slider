name: CI
on:
  pull_request:
  push:
    branches:
      - main
# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          environments: default lint
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure

  pytest:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - py310
          - py311
          - py312
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          environments: ${{ matrix.environment }}
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test-coverage --color=yes

  pytest_ui:
    name: ui:${{ matrix.environment }}:${{ matrix.os }}
    needs: [pre-commit, setup, pixi_lock]
    runs-on: ${{ matrix.os }}
    if: needs.setup.outputs.code_change == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        environment: ["test-ui"]
    timeout-minutes: 60
    env:
      PANEL_LOG_LEVEL: info
    steps:
      - uses: holoviz-dev/holoviz_tasks/pixi_install@v0
        with:
          environments: ${{ matrix.environment }}
      - name: Test UI
        run: |
          # Create a .uicoveragerc file to set the concurrency library to greenlet
          # https://github.com/microsoft/playwright-python/issues/313
          echo "[run]\nconcurrency = greenlet" > .uicoveragerc
          FAIL="--screenshot only-on-failure --full-page-screenshot --output ui_screenshots --tracing retain-on-failure"
          pixi run -e ${{ matrix.environment }} test-ui $COV --cov-config=.uicoveragerc $FAIL
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui_screenshots_${{ runner.os }}
          path: ./ui_screenshots
          if-no-files-found: ignore